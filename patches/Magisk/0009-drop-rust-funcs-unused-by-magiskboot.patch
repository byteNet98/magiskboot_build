--- b/native/src/base/cstr.rs
+++ a/native/src/base/cstr.rs
@@ -2,7 +2,10 @@
 use std::ffi::{CStr, FromBytesWithNulError, OsStr};
 use std::fmt::{Arguments, Debug, Display, Formatter, Write};
 use std::ops::{Deref, DerefMut};
+
+#[cfg(unix)]
 use std::os::unix::ffi::OsStrExt;
+
 use std::path::{Path, PathBuf};
 use std::str::{Utf8Chunks, Utf8Error};
 use std::{fmt, mem, slice, str};
@@ -123,6 +122,7 @@
     }
 }
 
+#[cfg(unix)]
 impl StringExt for PathBuf {
     #[allow(mutable_transmutes)]
     fn nul_terminate(&mut self) -> &mut [u8] {
--- a/native/src/base/files.rs
+++ b/native/src/base/files.rs
@@ -981,6 +981,8 @@ pub(crate) fn map_fd(fd: BorrowedFd, sz: usize, rw: bool) -> io::Result<&'static
     }
 }
 
+cfg_if::cfg_if! {
+    if #[cfg(any(target_os = "android", target_os = "linux"))] {
 #[allow(dead_code)]
 pub struct MountInfo {
     pub id: u32,
@@ -1059,4 +1061,6 @@ pub fn parse_mount_info(pid: &str) -> Vec<MountInfo> {
         });
     }
     res
+}
+    }
 }
